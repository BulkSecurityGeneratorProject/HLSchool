entity Config {
    key String required,
    value String required,
    rawData TextBlob
}

entity Vocabulary {
    japanese String required,
    english String required,
    vietnamese String required,
    image ImageBlob required,
    audio AnyBlob,
    rawData TextBlob
}

entity Post {
    title String required minlength(20),
    content_en TextBlob,
    content_vi TextBlob,
    createDate ZonedDateTime,
    lastModifier ZonedDateTime,
    activated Boolean required,
    rawData TextBlob
}

entity Comment {
    createDate ZonedDateTime,
    content TextBlob,
    rawData TextBlob
}

entity Room {
    createDate ZonedDateTime,
    level Integer required,
    title String required minlength(5),
    rawData TextBlob
}

entity Course {
    createDate ZonedDateTime,
    activated Boolean required,
    title String required minlength(5),
    level Integer required,
    coin Integer required,
    content_en TextBlob,
    content_vi TextBlob,
    image ImageBlob required,
    rawData TextBlob
}

entity Lesson {
    createDate ZonedDateTime,
    activated Boolean required,
    title String required minlength(5),
    level Integer required,
    content_en TextBlob,
    content_vi TextBlob,
    image ImageBlob required,
    rawData TextBlob
}

entity SubLesson{
    createDate ZonedDateTime
    title String required minlength(5),
    content_en TextBlob,
    content_vi TextBlob,
    rawData TextBlob
}

entity Feedback {
    createDate ZonedDateTime,
    content String required minlength(20),
    rawData TextBlob
}

enum QuestionType {
    TRANSLATION, LISTENING, SELECTION, SPEECH
}
enum QuestionSubType{
    SELECTION_IMAGE,
    SELECTION_TEXT,
    SELECTION_SPEECH
}

entity Question {
    createDate ZonedDateTime,
    questionType QuestionType required,
    questionSubType QuestionSubType required,
    content_en String required,
    content_vi String required,
    image ImageBlob,
    resource AnyBlob,
    rawData TextBlob
}

entity Answer {
    createDate ZonedDateTime,
    result Boolean required,
    rawData TextBlob
}

entity UserLog {
    createDate ZonedDateTime,
    complete Boolean,
    point Integer,
    rawData TextBlob
}

entity GiftLog {
    createDate ZonedDateTime,
    rawData TextBlob
}
entity CourseLog{
    complete Boolean,
    rawData TextBlob
}
entity SubLessonLog{
    complete Boolean,
    rawData TextBlob
}
entity LessonLog{
    complete Boolean,
    rawData TextBlob
}


entity Gift {
    price Integer required,
    image ImageBlob required,
    content_en TextBlob,
    content_vi TextBlob,
    createDate ZonedDateTime,
    rawData TextBlob
}

relationship ManyToOne {
    Post{user(login)} to User,
    Comment{post} to Post{comment},
    Comment{user(login)} to User,
    Question{subLesson} to SubLesson,
    Answer{question} to Question,
    Answer{vocabulary} to Vocabulary,
    Feedback{question} to Question,
    Feedback{user(login)} to User,
    Lesson{course} to Course,
    GiftLog{user(login)} to User,
    GiftLog{gift} to Gift,

    UserLog{user(login)} to User,
    CourseLog{user(login)} to User,
    LessonLog{user(login)} to User,
    SubLessonLog{user(login)} to User,

    CourseLog{course} to Course,
    LessonLog{lesson} to Lesson,
    SubLessonLog{subLesson} to SubLesson
}

paginate * with pagination
service * with serviceImpl
dto * with mapstruct
